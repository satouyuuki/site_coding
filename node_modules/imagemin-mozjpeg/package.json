{
  "name": "imagemin-mozjpeg",
  "version": "8.0.0",
  "description": "Imagemin plugin for mozjpeg",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "imagemin/imagemin-mozjpeg"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "github.com/kevva"
  },
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    {
      "name": "Shinnosuke Watanabe",
      "url": "github.com/shinnn"
    }
  ],
  "engines": {
    "node": ">=6"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "compress",
    "image",
    "imageminplugin",
    "img",
    "jpeg",
    "jpg",
    "minify",
    "mozjpeg",
    "optimize"
  ],
  "dependencies": {
    "execa": "^1.0.0",
    "is-jpg": "^2.0.0",
    "mozjpeg": "^6.0.0"
  },
  "devDependencies": {
    "ava": "*",
    "is-progressive": "^3.0.0",
    "pify": "^4.0.0",
    "xo": "*"
  },
  "readme": "# imagemin-mozjpeg [![Build Status](https://travis-ci.org/imagemin/imagemin-mozjpeg.svg?branch=master)](https://travis-ci.org/imagemin/imagemin-mozjpeg) [![Build status](https://ci.appveyor.com/api/projects/status/uuh7yi48erf4ykyo?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin-mozjpeg)\n\n> [Imagemin](https://github.com/imagemin/imagemin) plugin for [mozjpeg](https://github.com/mozilla/mozjpeg)\n\n\n## Install\n\n```\n$ npm install imagemin-mozjpeg\n```\n\n\n## Usage\n\n```js\nconst imagemin = require('imagemin');\nconst imageminMozjpeg = require('imagemin-mozjpeg');\n\n(async () => {\n\tawait imagemin(['images/*.jpg'], 'build/images', {\n\t\tuse: [\n\t\t\timageminMozjpeg()\n\t\t]\n\t});\n\n\tconsole.log('Images optimized');\n})();\n```\n\n\n## API\n\n### imageminMozjpeg([options])(buffer)\n\nReturns a `Promise<Buffer>`.\n\n#### options\n\n##### quality\n\nType: `number`\n\nCompression quality, in range `0` (worst) to `100` (perfect).\n\n##### progressive\n\nType: `boolean`<br>\nDefault: `true`\n\n`false` creates baseline JPEG file.\n\n##### targa\n\nType: `boolean`<br>\nDefault: `false`\n\nInput file is Targa format (usually not needed).\n\n##### revert\n\nType: `boolean`<br>\nDefault: `false`\n\nRevert to standard defaults instead of mozjpeg defaults.\n\n##### fastCrush\n\nType: `boolean`<br>\nDefault: `false`\n\nDisable progressive scan optimization.\n\n##### dcScanOpt\n\nType: `number`<br>\nDefault: `1`\n\nSet DC scan optimization mode.\n\n- `0` One scan for all components\n- `1` One scan per component\n- `2` Optimize between one scan for all components and one scan for 1st component plus one scan for remaining components\n\n##### trellis\n\nType: `boolean`<br>\nDefault: `true`\n\n[Trellis optimization](https://en.wikipedia.org/wiki/Trellis_quantization).\n\n##### trellisDC\n\nType: `boolean`<br>\nDefault: `true`\n\nTrellis optimization of DC coefficients.\n\n##### tune\n\nType: `string`<br>\nDefault: `hvs-psnr`\n\nSet Trellis optimization method. Available methods: `psnr`, `hvs-psnr`, `ssim`, `ms-ssim`\n\n##### overshoot\n\nType: `boolean`<br>\nDefault: `true`\n\nBlack-on-white deringing via overshoot.\n\n##### arithmetic\n\nType: `boolean`<br>\nDefault: `false`\n\nUse [arithmetic coding](https://en.wikipedia.org/wiki/Arithmetic_coding).\n\n##### dct\n\nType: `string`<br>\nDefault: `int`\n\nSet [DCT](https://en.wikipedia.org/wiki/Discrete_cosine_transform) method:\n\n- `int` Use integer DCT\n- `fast` Use fast integer DCT (less accurate)\n- `float` Use floating-point DCT\n\n##### quantBaseline\n\nType: `boolean`<br>\nDefault: `false`\n\nUse 8-bit quantization table entries for baseline JPEG compatibility.\n\n##### quantTable\n\nType: `number`\n\nUse predefined quantization table.\n\n- `0` JPEG Annex K\n- `1` Flat\n- `2` Custom, tuned for MS-SSIM\n- `3` ImageMagick table by N. Robidoux\n- `4` Custom, tuned for PSNR-HVS\n- `5` Table from paper by Klein, Silverstein and Carney\n\n##### smooth\n\nType: `number`\n\nSet the strength of smooth dithered input. (1...100)\n\n##### maxMemory\n\nType: `number`\n\nSet the maximum memory to use in kilobytes.\n\n##### sample\n\nType: `string[]`\n\nSet component sampling factors. Each item should be in the format `HxV`, for example `2x1`.\n\n#### buffer\n\nType: `buffer`\n\nBuffer to optimize.\n\n\n## License\n\nMIT © [Imagemin](https://github.com/imagemin)\n",
  "readmeFilename": "readme.md",
  "_id": "imagemin-mozjpeg@8.0.0",
  "_from": "imagemin-mozjpeg@"
}
