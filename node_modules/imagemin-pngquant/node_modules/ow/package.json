{
  "name": "ow",
  "version": "0.8.0",
  "description": "Function argument validation for humans",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "sindresorhus/ow"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "main": "dist/index.js",
  "engines": {
    "node": ">=6"
  },
  "scripts": {
    "prepublishOnly": "npm run build",
    "pretest": "npm run compile -- --sourceMap",
    "test": "npm run lint && nyc ava dist/test",
    "lint": "tslint --format stylish --project .",
    "build": "npm run clean && webpack",
    "compile": "npm run clean && tsc",
    "clean": "del dist",
    "docs": "typedoc source"
  },
  "files": [
    "dist"
  ],
  "keywords": [
    "type",
    "types",
    "check",
    "checking",
    "guard",
    "guards",
    "assert",
    "assertion",
    "predicate",
    "predicates",
    "is",
    "validate",
    "validation",
    "utility",
    "util",
    "typeof",
    "instanceof",
    "object"
  ],
  "devDependencies": {
    "@sindresorhus/is": "^0.12.0",
    "@types/dot-prop": "^4.2.0",
    "@types/lodash.isequal": "^4.5.2",
    "@types/node": "^10.12.0",
    "@types/vali-date": "^1.0.0",
    "add-module-exports-webpack-plugin": "^0.1.0",
    "ava": "^1.0.0-rc.1",
    "awesome-typescript-loader": "^5.2.1",
    "codecov": "^3.1.0",
    "del-cli": "^1.1.0",
    "dot-prop": "^4.2.0",
    "license-webpack-plugin": "^2.0.2",
    "lodash.isequal": "^4.5.0",
    "nyc": "^13.1.0",
    "tslint": "^5.9.1",
    "tslint-xo": "^0.9.0",
    "typedoc": "^0.13.0",
    "typescript": "^3.1.3",
    "vali-date": "^1.0.0",
    "webpack": "^4.20.2",
    "webpack-cli": "^3.1.2"
  },
  "typings": "dist/index.d.ts",
  "sideEffects": false,
  "nyc": {
    "exclude": [
      "dist/test"
    ]
  },
  "readme": "<p align=\"center\">\n\t<img src=\"media/logo.png\" width=\"300\">\n\t<br>\n\t<br>\n</p>\n\n[![Build Status](https://travis-ci.org/sindresorhus/ow.svg?branch=master)](https://travis-ci.org/sindresorhus/ow) [![Coverage Status](https://codecov.io/gh/sindresorhus/ow/branch/master/graph/badge.svg)](https://codecov.io/gh/sindresorhus/ow) [![gzip size](http://img.badgesize.io/https://cdn.jsdelivr.net/npm/ow/dist/index.js?compression=gzip)](https://cdn.jsdelivr.net/npm/ow/dist/index.js) [![install size](https://packagephobia.now.sh/badge?p=ow)](https://packagephobia.now.sh/result?p=ow)\n\n> Function argument validation for humans\n\n\n## Highlights\n\n- Expressive chainable API\n- Lots of built-in validations\n- Supports custom validations\n- Written in TypeScript\n\n\n## Install\n\n```\n$ npm install ow\n```\n\n\n## Usage\n\n```ts\nimport ow from 'ow';\n\nconst unicorn = input => {\n\tow(input, ow.string.minLength(5));\n\n\t// â€¦\n};\n\nunicorn(3);\n//=> ArgumentError: Expected argument to be of type `string` but received type `number`\n\nunicorn('yo');\n//=> ArgumentError: Expected string to have a minimum length of `5`, got `yo`\n```\n\n\n## API\n\n[Complete API documentation](https://sindresorhus.com/ow)\n\n### ow(value, predicate)\n\nTest if `value` matches the provided `predicate`.  Throws an `ArgumentError` if the test fails.\n\n### ow.isValid(value, predicate)\n\nReturns `true` if the value matches the predicate, otherwise returns `false`.\n\n### ow.create(predicate)\n\nCreate a reusable validator.\n\n```ts\nconst checkPassword = ow.create(ow.string.minLength(6));\n\ncheckPassword('foo');\n//=> ArgumentError: Expected string to have a minimum length of `6`, got `foo`\n```\n\n### ow.any(...predicate[])\n\nReturns a predicate that verifies if the value matches at least one of the given predicates.\n\n```ts\now('foo', ow.any(ow.string.maxLength(3), ow.number));\n```\n\n### ow.{type}\n\nAll the below types return a predicate. Every predicate has some extra operators that you can use to test the value even more fine-grained.\n\n#### Primitives\n\n- [`undefined`](https://sindresorhus.com/ow/interfaces/ow.html#undefined)\n- [`null`](https://sindresorhus.com/ow/interfaces/ow.html#null)\n- [`string`](https://sindresorhus.com/ow/classes/stringpredicate.html)\n- [`number`](https://sindresorhus.com/ow/classes/numberpredicate.html)\n- [`boolean`](https://sindresorhus.com/ow/classes/booleanpredicate.html)\n- [`symbol`](https://sindresorhus.com/ow/interfaces/ow.html#symbol)\n\n#### Built-in types\n\n- [`array`](https://sindresorhus.com/ow/classes/arraypredicate.html)\n- [`function`](https://sindresorhus.com/ow/interfaces/ow.html#function)\n- [`buffer`](https://sindresorhus.com/ow/interfaces/ow.html#buffer)\n- [`object`](https://sindresorhus.com/ow/classes/objectpredicate.html)\n- [`regExp`](https://sindresorhus.com/ow/interfaces/ow.html#regexp)\n- [`date`](https://sindresorhus.com/ow/classes/datepredicate.html)\n- [`error`](https://sindresorhus.com/ow/classes/errorpredicate.html)\n- [`promise`](https://sindresorhus.com/ow/interfaces/ow.html#promise)\n- [`map`](https://sindresorhus.com/ow/classes/mappredicate.html)\n- [`set`](https://sindresorhus.com/ow/classes/setpredicate.html)\n- [`weakMap`](https://sindresorhus.com/ow/classes/weakmappredicate.html)\n- [`weakSet`](https://sindresorhus.com/ow/classes/weaksetpredicate.html)\n\n#### Typed arrays\n\n- [`int8Array`](https://sindresorhus.com/ow/interfaces/ow.html#int8Array)\n- [`uint8Array`](https://sindresorhus.com/ow/interfaces/ow.html#uint8Array)\n- [`uint8ClampedArray`](https://sindresorhus.com/ow/interfaces/ow.html#uint8ClampedArray)\n- [`int16Array`](https://sindresorhus.com/ow/interfaces/ow.html#int16Array)\n- [`uint16Array`](https://sindresorhus.com/ow/interfaces/ow.html#uint16Array)\n- [`int32Array`](https://sindresorhus.com/ow/interfaces/ow.html#in32Array)\n- [`uint32Array`](https://sindresorhus.com/ow/interfaces/ow.html#uin32Array)\n- [`float32Array`](https://sindresorhus.com/ow/interfaces/ow.html#float32Array)\n- [`float64Array`](https://sindresorhus.com/ow/interfaces/ow.html#float64Array)\n\n#### Structured data\n\n- [`arrayBuffer`](https://sindresorhus.com/ow/interfaces/ow.html#arraybuffer)\n- [`dataView`](https://sindresorhus.com/ow/interfaces/ow.html#dataview)\n\n#### Miscellaneous\n\n- [`nan`](https://sindresorhus.com/ow/interfaces/ow.html#nan)\n- [`nullOrUndefined`](https://sindresorhus.com/ow/interfaces/ow.html#nullorundefined)\n- [`iterable`](https://sindresorhus.com/ow/interfaces/ow.html#iterable)\n- [`typedArray`](https://sindresorhus.com/ow/interfaces/ow.html#typedarray)\n\n### Predicates\n\nThe following predicates are available on every type.\n\n#### not\n\nInverts the following predicate.\n\n```ts\now(1, ow.number.not.infinite);\n\now('', ow.string.not.empty);\n//=> ArgumentError: [NOT] Expected string to be empty, got ``\n```\n\n#### is(fn)\n\nUse a custom validation function. Return `true` if the value matches the validation, return `false` if it doesn't.\n\n```ts\now(1, ow.number.is(x => x < 10));\n\now(1, ow.number.is(x => x > 10));\n//=> ArgumentError: Expected `1` to pass custom validation function\n```\n\nInstead of returning `false`, you can also return a custom error message which results in a failure.\n\n```ts\nconst greaterThan = (max: number, x: number) => {\n\treturn x > max || `Expected \\`${x}\\` to be greater than \\`${max}\\``;\n};\n\now(5, ow.number.is(x => greaterThan(10, x)));\n//=> ArgumentError: Expected `5` to be greater than `10`\n```\n\n#### label(string)\n\nThis assigns a custom label to be used in any error messages. It is useful for making error messages more user-friendly by including the name of the variable which failed validation.\n\nThis predicate does not add any additional validation.\n\n```ts\now('', ow.string.nonEmpty);\n//=> ArgumentError: Expected string to not be empty\n\now('', ow.string.label('foo').nonEmpty);\n//=> ArgumentError: Expected string `foo` to not be empty\n```\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Sam Verschueren](https://github.com/SamVerschueren)\n\n\n## Related\n\n- [@sindresorhus/is](https://github.com/sindresorhus/is) - Type check values\n- [ngx-ow](https://github.com/SamVerschueren/ngx-ow) - Angular form validation on steroids\n\n\n## License\n\nMIT\n",
  "readmeFilename": "readme.md",
  "_id": "ow@0.8.0",
  "_from": "ow@^0.8.0"
}
