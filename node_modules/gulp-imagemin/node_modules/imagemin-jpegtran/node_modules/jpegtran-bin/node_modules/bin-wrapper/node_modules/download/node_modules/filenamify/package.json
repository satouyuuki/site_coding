{
  "name": "filenamify",
  "version": "2.1.0",
  "description": "Convert a string to a valid safe filename",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "sindresorhus/filenamify"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "engines": {
    "node": ">=4"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "filename",
    "safe",
    "sanitize",
    "file",
    "name",
    "string",
    "path",
    "filepath",
    "convert",
    "valid",
    "dirname"
  ],
  "dependencies": {
    "filename-reserved-regex": "^2.0.0",
    "strip-outer": "^1.0.0",
    "trim-repeated": "^1.0.0"
  },
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "readme": "# filenamify [![Build Status](https://travis-ci.org/sindresorhus/filenamify.svg?branch=master)](https://travis-ci.org/sindresorhus/filenamify)\n\n> Convert a string to a valid safe filename\n\nOn Unix-like systems `/` is reserved and [`<>:\"/\\|?*`](http://msdn.microsoft.com/en-us/library/aa365247%28VS.85%29#naming_conventions) on Windows.\n\n\n## Install\n\n```\n$ npm install filenamify\n```\n\n\n## Usage\n\n```js\nconst filenamify = require('filenamify');\n\nfilenamify('<foo/bar>');\n//=> 'foo!bar'\n\nfilenamify('foo:\"bar\"', {replacement: 'üê¥'});\n//=> 'fooüê¥bar'\n```\n\n\n## API\n\n### filenamify(input, [options])\n\nAccepts a filename and returns a valid filename.\n\n### filenamify.path(input, [options])\n\nAccepts a path and returns the path with a valid filename.\n\n#### input\n\nType: `string`\n\n#### options\n\n##### replacement\n\nType: `string`<br>\nDefault: `'!'`\n\nString to use as replacement for reserved filename characters.\n\nCannot contain: `<` `>` `:` `\"` `/` `\\` `|` `?` `*`\n\n\n## Related\n\n- [filenamify-url](https://github.com/sindresorhus/filenamify-url) - Convert a URL to a valid filename\n- [valid-filename](https://github.com/sindresorhus/valid-filename) - Check if a string is a valid filename\n- [unused-filename](https://github.com/sindresorhus/unused-filename) - Get a unused filename by appending a number if it exists\n- [slugify](https://github.com/sindresorhus/slugify) - Slugify a string\n\n\n## License\n\nMIT ¬© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "filenamify@2.1.0",
  "_from": "filenamify@^2.0.0"
}
